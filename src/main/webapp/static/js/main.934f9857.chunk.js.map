{"version":3,"sources":["components/SearchComponents.js","services/AnimeServices.js","components/AnimeCard.js","components/AnimeGridContainer.js","components/LandingPage.js","services/LoginService.js","helpers/CookieHelper.js","components/Register.js","components/Login.js","components/NavBar.js","components/CustomSnackBar.js","containers/AnimeHomeController.js","containers/AnimeProfileController.js","components/AnimeDetails.js","services/ReviewService.js","components/ReviewsCard.js","components/ReviewsModal.js","services/ProfileServices.js","components/ProfilePage.js","components/AdminReview.js","components/AuthenticatePlease.js","components/Animecadabra.js","App.js","serviceWorker.js","index.js"],"names":["SearchComponents","state","inputText","text","this","setState","window","location","href","class","className","onChange","e","setInputState","target","value","type","placeholder","onClick","triggerSearch","React","Component","api","fetch","method","headers","then","response","json","slug","animeTitle","console","log","animeId","AnimeCard","attr","props","to","style","textDecoration","title","Math","round","averageRating","src","posterImage","large","alt","canonicalTitle","AnimeGridContainer","animeList","map","trendingAnime","attributes","LandingPage","upcomingAnime","user","body","JSON","stringify","parse","err","username","password","status","ls","require","inOneHour","Date","getTime","setCookie","access_token","Cookies","set","expires","getAccessToken","get","isAuthenticatedUser","setUserToLocal","getLocalUser","Register","name","email","usertype","handleSubmit","bind","event","$","on","hide","html","buildErrorString","show","loginService","hasOwnProperty","accessToken","document","getElementById","click","reload","errorString","length","test","id","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","handleInputChange","Login","NavBar","isLoggedin","LoginService","data-toggle","data-target","getLocalUserName","isAdmin","handleLogout","animeSearch","makeStyles","theme","root","width","marginTop","spacing","AnimeHomeController","searchedAnime","view","showAlert","isLoggedIn","searchText","match","params","searchTitle","searchAnime","animeService","animeDataList","min","loadUpComingAnime","AnimeDetails","animeDetails","getAnimeDetails","animeSlug","Object","keys","constructor","r","parseInt","userCount","popularityRank","ratingRank","synopsis","ageRating","episodeCount","userApi","review","uid","rid","useStyles","maxWidth","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","avatar1","blue","avatar2","green","avatar3","pink","RecipeReviewCard","classes","reviews","Card","CardHeader","Avatar","toUpperCase","reviewImage","tiny","action","isAdminView","data-rid","upVotesCount","isUserReview","subheader","createdAt","split","isProfileView","linkToAnime","CardContent","Typography","variant","color","component","reaction","ReviewsModal","reviewList","userList","userReviewsList","animePoster","ajaxDone","newCommentText","getUserReviews","getAnime","getReviews","userId","ReviewService","AnimeServices","anime","coverImage","styles","TextareaAutosize","rowsMin","createReview","el","index","timestamp","profile","ProfilePage","isEditing","isEditable","about","gender","timeSpentOnAnime","updateProfile","ProfileServices","edit","Number","setEditing","AdminReview","adminReviewList","ridToDelete","self","data","prevState","filter","deleteReview","AuthentcatePlease","Animecadabra","path","exact","render","authenticated","App","rel","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.934f9857.chunk.js","sourcesContent":["import React from \"react\";\nimport './SearchComponents.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default\n    class SearchComponents extends React.Component {\n    state = {\n        inputText: \"\"\n    }\n\n    setInputState(text) {\n        this.setState({\n            inputText: text\n        });\n    }\n\n    triggerSearch(text) {\n        window.location.href=`/search/${text}`;\n    }\n\n    render() {\n        return (\n            <div class=\"form-group search-container row\">\n                <div className=\"col-sm-3\">&nbsp;</div>\n                <div className=\"col-sm-6 input-group\">\n                    <span class=\"fa fa-search form-control-feedback\"></span>\n                    <input onChange={(e) => this.setInputState(e.target.value)} type=\"text\" class=\"form-control\" placeholder=\"Search\" />\n                    <div class=\"input-group-append\">\n                        <span onClick={(e) => this.triggerSearch(this.state.inputText)} class=\"input-group-text\"><i className=\"fa fa-search\"></i></span>\n                    </div>\n                </div>\n                <div className=\"col-sm-3\">&nbsp;</div>\n            </div>\n        )\n    }\n}","const api = \"https://kitsu.io/api/edge\";\nconst getTrendingAnime = () => fetch(`${api}/trending/anime`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => response.json())\n\nconst getUpcomingAnime = () => fetch(`${api}/anime?filter[status]=upcoming&page[limit]=5&sort=-user_count`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => response.json())\n\nconst getAnimeDetails = (slug) => fetch(`${api}/anime?fields[categories]=slug,title&filter[slug]=${slug}`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => response.json())\n\nconst searchAnime = (animeTitle) => fetch(`${api}/anime?filter[text]=${animeTitle}`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => {\n    console.log(`${api}/anime?filter[text]=${animeTitle}`);\n    return response.json()\n});\nconst findAnimeById = (animeId) => fetch(`${api}/anime?filter[id]=${animeId}`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => {\n    return response.json()\n});\n\nconst getAnimesByIds = (animeIds) => {\n    let animeParameterCsv = animeIds.join();\n    return fetch(`${api}/anime?filter[id]=${animeParameterCsv}`,{\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => {\n        return response.json();\n    })\n}\n\nexport default {\n    getTrendingAnime,\n    getUpcomingAnime,\n    getAnimeDetails,\n    searchAnime,\n    findAnimeById,\n    getAnimesByIds\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingPage.css\"\n\nexport default\n    class AnimeCard extends React.Component {\n\n    render() {\n        let attr = this.props.attr;\n\n        return (\n            <Link to={`/details/${attr.slug}`} style={{ textDecoration: 'none' }}>\n            <span>\n                <div className=\"col mb-6\">\n                    <div class=\"card h-100\">\n                        <span title=\"RAating\" class={Math.round(attr.averageRating) ?\"notify-badge\" : \"notify-badge grey-m\" }>&nbsp;{Math.round(attr.averageRating) ? Math.round(attr.averageRating) : \"N/A\"}&nbsp;</span>\n                        <img src={attr.posterImage.large} class=\"card-img-top\" alt=\"\" />\n                    </div>\n                    <div className=\"cardTitle\"><strong>{attr.canonicalTitle}</strong></div>\n                    <div>&nbsp;</div>\n                </div>\n            </span>\n            </Link>\n        );\n    }\n}","import React from \"react\";\nimport AnimeCard from \"./AnimeCard\";\n\nexport default\n    class AnimeGridContainer extends React.Component {\n    render() {\n        return (\n            <span>\n                <h2>{this.props.title}</h2>\n                <div className=\"wbdv-grid-row row row-cols-1 row-cols-md-5\">\n                    {this.props.animeList.map((trendingAnime) => {\n                        console.log(trendingAnime);\n                        return <AnimeCard animeId={trendingAnime} attr={trendingAnime.attributes} />\n                    })}\n                </div>\n            </span>\n        )\n    }\n}","import React from \"react\";\nimport \"./LandingPage.css\"\nimport AnimeGridContainer from \"./AnimeGridContainer\";\nexport default\n    class LandingPage extends React.Component {\n    render() {\n        return (\n            <span>\n            <AnimeGridContainer title=\"Trending\" animeList={this.props.trendingAnime}/>\n            <AnimeGridContainer title=\"Upcoming\" animeList={this.props.upcomingAnime}/>\n            </span>\n        )\n    }\n}","const api = \"https://cs4500-20su1-ss-proj-serv-java.herokuapp.com/api\"\nconst createUser = (user) => fetch(`${api}/register`, {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n}).then(response => response.text())\n.then(text => {\n    try{\n        const data = JSON.parse(text);\n        return data;\n    }\n    catch(err){\n     return null;\n    }\n});\n\nconst loginUser = (username, password) => fetch(`${api}/login`, {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify({\"username\": username, \"password\": password})\n}).then(response => {\n    console.log(response);\n    if(response && response.status != 200) {\n        return null;\n    }\n    return response.json();\n});\n\nconst signOutUser = () => fetch(`${api}/logout`, {\n    method: 'POST',\n}).then(response => {\n    console.log(`${api}/logout`);\n    return response;\n});\n\nconst userProfile = () => fetch(`${api}/login`, {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify({\"username\": \"username\", \"password\": \"password\"})\n}).then(response => {\n    return response;\n});\n\nexport default {\n    createUser,\n    loginUser,\n    userProfile,\n    signOutUser\n}","import Cookies from 'js-cookie'\nvar ls = require('local-storage');\nconst expires = (60 * 60) * 1000\nconst inOneHour = new Date(new Date().getTime() + expires)\n\nexport const setCookie = (access_token) => {\n    Cookies.set('access_token', access_token, { expires: inOneHour })\n}\n\nexport const getAccessToken = () => {\n    return Cookies.get('access_token')\n}\n\nexport const isAuthenticatedUser = () => {\n    return getAccessToken() && getAccessToken() !== \"null\";\n}\n\nexport const setUserToLocal = (user) => {\n    ls(\"user\", user);\n}\n\nexport const getLocalUser = () => {\n    return ls(\"user\");\n}\n\nexport const getLocalUserName = () => {\n    let user = getLocalUser();\n    if (user) {\n        if (user.name) {\n            return `Welcome ${user.name}!`;\n        }\n        else if (user.username) {\n            return `Welcome ${user.username}!`;\n        }\n    }\n    else {\n        return \"Welcome!\"\n    }\n}\n\nexport const isAdmin = () => {\n    let user = getLocalUser();\n    return user && user.usertype === \"admin\";\n}","import React from \"react\";\nimport animeService from \"../services/AnimeServices\";\nimport loginService from \"../services/LoginService\";\nimport { setCookie, setUserToLocal } from \"../helpers/CookieHelper\";\nimport $ from \"jquery\";\n\nexport default class Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this\n            .handleSubmit\n            .bind(this);\n    }\n    state = {\n        name: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        usertype: \"user\"\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n          [name]: value\n        });\n      }\n\n    handleSubmit(event) {\n        $(\".js-close\").on(\"click\", function(){\n            $(\"#error-container-reg\").hide();\n            $(\"#error-container-reg\").html(\"\");\n        });\n        let user ={\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password,\n            email: this.state.email,\n            usertype: this.state.usertype\n        }\n        let err = this.buildErrorString(user);\n        if(err) {\n            $(\"#error-container-reg\").show();\n            $(\"#error-container-reg\").html(err);\n            return;    \n        }\n\n        loginService.createUser(user).then((response) => {\n            if(response == null) {\n                $(\"#error-container-reg\").show();\n                $(\"#error-container-reg\").html(\"Sorry! Username is already taken. Try a different one.\");\n                return;\n            }\n            if(response !== null && response.hasOwnProperty(\"accessToken\")){\n                setCookie(response.accessToken);\n                setUserToLocal(response);\n            } \n            document.getElementById(\"closeButtonRegister\").click();\n            window.location.reload(false);\n        });\n    }\n    \n    buildErrorString(user) {\n        let errorString = \"\";\n        if (!user.name) {\n            errorString += `-  Name cannot be empty. <br/>`\n        }\n\n        if (!user.username) {\n            errorString += `- UserName cannot be empty.<br/>`\n        }\n\n        if (!user.password) {\n            errorString += `- Password cannot be empty!<br/>`\n        } else if (user.password.length < 8) {\n            errorString += `- Passwords must be atleast 8 characters long.<br/>`\n        }\n\n        if(!user.email) {\n            errorString += `- Email cannot be empty.<br/>`\n        } else {\n            var re = /\\S+@\\S+\\.\\S+/;\n            errorString += re.test(user.email) ? \"\" : \"- Email must be of format name@domain.com\";\n        }\n\n        return errorString;\n\n    }\n    render() {\n        return (\n            <span>\n                <div class=\"modal fade\" id=\"registerModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"registerModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Sign Up!</h5>\n                                <button type=\"button\" class=\" js-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            <div id=\"error-container-reg\" style={{\"display\":\"none\"}} class=\"alert alert-danger\" role=\"alert\">\n                                </div>\n                                <form id=\"registerForm\">\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"firstName\">First Name</label>\n                                        <div className=\"col-sm-10\">\n                                            <input id=\"name\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"name\"\n                                                className=\"form-control\"\n                                                placeholder=\"Alice\"\n                                                title=\"Your name\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"username\">Username</label>\n                                        <div className=\"col-sm-10\">\n                                            <input id=\"username\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"username\"\n                                                className=\"form-control wbdv-field wbdv-username\"\n                                                placeholder=\"animeFan123\"\n                                                title=\"Username for login\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"password\">Password</label>\n                                        <div className=\"col-sm-10\">\n                                            <input\n                                                id=\"password\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"password\"\n                                                className=\"form-control wbdv-field wbdv-password\"\n                                                placeholder=\"abc123#$%\"\n                                                type=\"password\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"email\">E-mail Address</label>\n                                        <div className=\"col-sm-10\">\n                                            <input id=\"email\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"email\"\n                                                className=\"form-control wbdv-field wbdv-email\"\n                                                placeholder=\"animefan@animeworld.com\"\n                                                title=\"Use this e-mail for occasional updates\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-formx-label\" htmlFor=\"role\">Role</label>\n                                        <div className=\"col-sm-10\">\n                                            <select id=\"role\" \n                                             onChange={(e)=>this.handleInputChange(e)}\n                                             name=\"usertype\"\n                                            className=\"form-control wbdv-field wbdv-role\">\n                                                <option value=\"user\">Anime Fan</option>\n                                                <option value=\"admin\">Admin</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button id=\"closeButtonRegister\" type=\"button\" class=\"btn btn-secondary js-close\" data-dismiss=\"modal\">Close</button>\n                                <button onClick={(e) => this.handleSubmit()}\n                                    type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </span>\n            // </div>\n        )\n    }\n}\n\n// export default Register","import React from \"react\";\nimport loginService from \"../services/LoginService\";\nimport { setCookie, setUserToLocal } from \"../helpers/CookieHelper\";\nimport $ from \"jquery\";\nexport default class Login extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\"\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        $(\".js-close\").on(\"click\", function(){\n            $(\"#error-container\").hide();\n            $(\"#error-container\").html(\"\");\n        });\n        let user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        let errorString = \"\";\n        if (!user.username) {\n            errorString += `- User name cannot be empty! <br/>`\n        }\n        if (!user.password) {\n            errorString += `- Password cannot be empty!`\n        }\n\n        if(errorString) {\n            $(\"#error-container\").show();\n            $(\"#error-container\").html(errorString);\n            return;    \n        }\n\n        loginService.loginUser(user.username, user.password).then((response) => {\n            if(response == null) {\n                $(\"#error-container\").show();\n                $(\"#error-container\").html(\"Username and Password combination does not exist! try again\");\n                return;\n            }\n            if (response !== null && response.hasOwnProperty(\"accessToken\")) {\n                setCookie(response.accessToken);\n            }\n            setUserToLocal(response);\n            document.getElementById(\"closeButtonLogin\").click();\n            window.location.reload(false);\n        });\n    }\n\n    render() {\n        return (\n            <span>\n                <div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModal\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\n                                <button type=\"button\" class=\"close js-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <div id=\"error-container\" style={{\"display\":\"none\"}} class=\"alert alert-danger\" role=\"alert\">\n                                </div>\n                                <form>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"username\">Username</label>\n                                        <div className=\"col-sm-10\">\n                                            <input id=\"username\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"username\"\n                                                className=\"form-control wbdv-field wbdv-username\"\n                                                placeholder=\"animeFan123\"\n                                                title=\"Use this username to login\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"password\">Password</label>\n                                        <div className=\"col-sm-10\">\n                                            <input\n                                                id=\"password\"\n                                                onChange={(e) => this.handleInputChange(e)}\n                                                name=\"password\"\n                                                className=\"form-control wbdv-field wbdv-password\"\n                                                placeholder=\"abc123#$%\"\n                                                type=\"password\" />\n                                        </div>\n                                    </div>\n\n\n                                </form>\n\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button id=\"closeButtonLogin\" type=\"button\" class=\"btn btn-secondary js-close\" data-dismiss=\"modal\">Cancel</button>\n                                <button onClick={(e) => this.handleSubmit()} type=\"button\" class=\"btn btn-primary\">Login</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </span>\n        )\n    }\n\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport LoginService from \"../services/LoginService\";\nimport { getLocalUserName, setCookie, isAuthenticatedUser, setUserToLocal, isAdmin } from \"../helpers/CookieHelper\";\n\nexport default\n    class NavBar extends React.Component {\n    state = {\n        inputText: \"\",\n        isLoggedin: this.props.isLoggedin\n    }\n\n\n    setInputState(text) {\n        this.setState({\n            inputText: text\n        });\n    }\n\n    handleLogout(event) {\n   \n         LoginService.signOutUser().then(() => {\n            setCookie(null);\n            setUserToLocal(null);\n            window.location.reload(false);\n        });\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"/\">Animecadabra</a>\n                <Register />\n                <Login />\n                <form className=\"form-inline\">\n                { !isAuthenticatedUser() &&\n                <span>\n                    <button style={{ \"marginRight\": \"10px\" }} data-toggle=\"modal\" data-target=\"#loginModal\" className=\"btn btn-outline-info my-2 my-sm-0\" type=\"button\">Sign in</button>\n                    <button style={{ \"marginRight\": \"10px\" }} data-toggle=\"modal\" data-target=\"#registerModal\" className=\"btn btn-outline-info my-2 my-sm-0\" type=\"button\">Sign up</button>\n                </span>\n                }\n                {isAuthenticatedUser() &&\n                <span>\n                    <span style={{\"color\":\"white\", \"marginRight\":\"30px\"}}> \n                    {getLocalUserName()}\n                    </span>\n                    {isAdmin() &&\n                    <Link to={`/admin/reviews`} style={{ textDecoration: 'none' }}>\n                        <span style={{\"color\":\"white\", \"margin-right\":\"30px\", \"fontSize\":\"20px\"}}> \n                            Admin Reviews\n                        </span>\n                    </Link>\n                     }\n                    <Link to={`/profile`} style={{ textDecoration: 'none' }}>\n                        <span style={{\"color\":\"white\", \"margin-right\":\"30px\", \"fontSize\":\"20px\"}}> \n                            Profile\n                        </span>\n                    </Link>\n                    <button onClick={(e) => this.handleLogout()} style={{ \"margin-right\": \"10px\" }} className=\"btn btn-outline-info my-2 my-sm-0\" type=\"button\">Sign Out</button>\n                 </span>\n                }\n                    <input onChange={(e) => this.setInputState(e.target.value)} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                    <button onClick={() => this.props.animeSearch(this.state.inputText)} className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\">Search</button>\n                </form>\n\n            </nav>\n        );\n    }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}  open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Login Successful\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SearchComponents from \"../components/SearchComponents\";\nimport animeService from \"../services/AnimeServices\";\nimport LandingPage from \"../components/LandingPage\";\nimport NavBar from \"../components/NavBar\";\nimport AnimeGridContainer from \"../components/AnimeGridContainer\";\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CustomizedSnackbars from \"../components/CustomSnackBar\";\nimport LoginService from \"../services/LoginService\";\nimport { isAuthenticatedUser } from \"../helpers/CookieHelper\";\n\nexport default\n    class AnimeHomeController extends React.Component {\n    state = {\n        trendingAnime: [],\n        upcomingAnime: [],\n        searchedAnime: [],\n        view: \"\",\n        showAlert: false,\n        isLoggedIn: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoggedIn: isAuthenticatedUser()\n        });\n        let searchText = this.props.match.params.searchTitle;\n        if(searchText){\n            this.searchAnime(searchText);\n        } else {\n            this.setState({\n                view: \"Landing\"\n            })\n            animeService.getTrendingAnime().then((response) => {\n                console.log(response)\n                let animeDataList = response[\"data\"];\n                animeDataList.length = Math.min(animeDataList.length, 10)\n                this.setState({\n                    trendingAnime: animeDataList\n                })\n            })\n            this.loadUpComingAnime();\n        }\n    }\n\n    loadUpComingAnime() {\n        animeService.getUpcomingAnime().then((response) => {\n            let animeDataList = response[\"data\"];\n            this.setState({\n                upcomingAnime: animeDataList\n            })\n        })\n    }\n\n    searchAnime(searchText) {\n        if (searchText === \"\") {\n            this.setState({\n                view: \"Landing\"\n            })\n            return;\n        }\n        animeService.searchAnime(searchText).then((response) => {\n            let animeDataList = response.hasOwnProperty(\"data\") && response[\"data\"];\n            this.setState({\n                searchedAnime: animeDataList,\n                view: \"Search\"\n            })\n        })\n    }\n\n    render() {\n        this.searchAnime = this.searchAnime.bind(this);\n   \n        return (\n            <span>\n                <NavBar animeSearch={this.searchAnime} isLoggedin={this.state.isLoggedIn} />\n                <div className=\"container\">\n                    <SearchComponents />\n                    {this.state.view === \"Landing\" &&\n                        <LandingPage\n                            trendingAnime={this.state.trendingAnime}\n                            upcomingAnime={this.state.upcomingAnime}\n                        />}\n\n                    {this.state.view === \"Search\" &&\n                        <AnimeGridContainer title=\"Search Results\" animeList={this.state.searchedAnime} />\n                    }\n\n                </div>\n            </span>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class AnimeProfileController extends React.Component {\n    state = {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <span>\n                <nav className=\"navbar navbar-dark bg-dark\">\n                    <a className=\"navbar-brand\" href=\"/\">Animecadabra</a>\n                    <form className=\"form-inline\">\n                        <input onChange={(e) => this.setInputState(e.target.value)} className=\"form-control mr-sm-2\"\n                               type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                        <button onClick={() => this.props.animeSearch(this.state.inputText)}\n                                className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\">Search\n                        </button>\n                    </form>\n                    {/*<button onClick={() => this.props.createUser()} to=\"/signup\" className=\"btn btn-outline-success my-2 my-sm-0\">Create a New User!</button>*/}\n\n                    <div className=\"topnav-right\">\n                        <Link to={`/profile`}>\n                            <button type=\"button\"\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\n                            >Profile\n                            </button>\n                        </Link>\n                        <Link to={`/`}>\n                            <button type=\"button\"\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\n                            >Browse Anime\n                            </button>\n                        </Link>\n                        <Link to={`/library`}>\n                            <button type=\"button\"\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\n                            >Library\n                            </button>\n                        </Link>\n                        <Link to={`/`}>\n                            <button type=\"button\"\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\n                            >Logout\n                            </button>\n                        </Link>\n                    </div>\n                </nav>\n                <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\n                    <div class=\"sidebar-sticky \" >\n                        <ul class=\"nav flex-column\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" href=\"#\">\n                                    Activity\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" href=\"#\">\n                                    Library\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" href=\"#\">\n                                    Profile\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </span>\n        )\n    }\n}","import React from \"react\";\nimport animeService from \"../services/AnimeServices\";\nimport \"./Animedetails.css\"\nimport NavBar from \"./NavBar\";\nimport { Link } from \"react-router-dom\";\nexport default\n    class AnimeDetails extends React.Component {\n    state = {\n        animeDetails: {},\n        id: \"\"\n    }\n    componentWillMount() {\n        this.getAnimeDetails(this.props.match.params.animeTitle);\n    }\n    getAnimeDetails(animeSlug) {\n        animeService.getAnimeDetails(animeSlug).then((response) => {\n            let animeDetails = response[\"data\"] && response[\"data\"].length ? response[\"data\"][0] : {};\n            let id =  Object.keys(animeDetails).length === 0 && animeDetails.constructor === Object ?  \"\" : animeDetails.id;\n            this.setState({\n                animeDetails,\n                id  \n            });\n        })\n    }\n\n    getCAClassName() {\n        if (this.state.animeDetails && this.state.animeDetails.hasOwnProperty(\"averageRating\")) {\n            let r = parseInt(this.state.animeDetails.averageRating);\n            if (r >= 80) {\n                return \"green-ca\"\n            } else if (r > 50 && r < 80) {\n                return \"orange-ca\"\n            } else {\n                return \"red\"\n            }\n        }\n    }\n\n    render() {\n        let attr = this.state.animeDetails ? this.state.animeDetails.attributes : {};\n        return (\n            (attr ?\n                <span>\n                <NavBar />\n                <div className=\"containser-fluid\">\n                    <div className=\"rows\">\n                        <div className=\"animePoster\">\n                            <div class=\"card bg-dark text-white wbdv-details-card\">\n                                <img src={attr.posterImage.large} class=\"card-img\" alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"animeDetailsContainer\">\n                            <div className=\"animeDetails\">\n                                <h2>{attr.canonicalTitle}</h2> \n                                <div>\n                                <Link to={`/animeId/${this.state.id}/reviews`} style={{ textDecoration: 'none' }}>\n                                <button className=\"btn btn-info\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Check user reviews!</button>\n                                </Link>\n                                </div>\n                                {attr.averageRating && <div className=\"caApprovals\">{attr.averageRating}% Community Approvals {attr.userCount && <i className=\"subtext\">( from {attr.userCount} Users )</i>}</div>}\n                                {(attr.popularityRank || attr.ratingRank) &&\n                                    (<span>\n                                        <div className=\"divider\"></div>\n                                        <div className=\"popularityWrap\">\n                                            {attr.popularityRank && <div><i class=\"fa fa-heart\"></i> #{attr.popularityRank} &nbsp;<i className=\"subtext\">(Popularity Rank)</i></div>}\n                                            {attr.ratingRank && <div><i class=\"fa fa-star\"></i>{attr.ratingRank}&nbsp;<i className=\"subtext\">(Ratings Rank)</i></div>}\n                                        </div>\n                                        <div className=\"divider\"></div>\n                                    </span>)\n                                }\n                                <div className=\"synopsis\">{attr.synopsis}</div>\n                                {attr.ageRating && <div><strong>Age Rating:</strong> {attr.ageRating ? attr.ageRating : \"N/A\"}</div>}\n                                <div><strong>Episodes:</strong> {attr.episodeCount ? attr.episodeCount : \"N/A\"}</div>\n                                <div><strong>Status:</strong> {attr.status ? attr.status : \"N/A\"}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </span>\n                : <span></span>)\n        );\n    }\n}","const api = \"https://kitsu.io/api/edge\";\nconst userApi = \"https://cs4500-20su1-ss-proj-serv-java.herokuapp.com\";\nconst getReviewsForAnime = (animeId) => fetch(`${api}/media-reactions?filter[animeId]=${animeId}&include=user&page[limit]=10&sort=-upVotesCount`, {\n    method: 'GET',\n    headers: {\n        'content-type': 'application/json'\n    }\n}).then(response => response.json())\n\nconst getUserReviewsForAnime = (animeId) => fetch(`${userApi}/reviewsByAid?aid=${animeId}`, {\n    method: 'GET'\n}).then(response => {\n    if(!response || response.length === 0) {\n        return [];\n    }\n    return response.json()\n})\n\nconst getUserReviews = (uid) => fetch(`${userApi}/reviews?uid=${uid}`, {\n    method: 'GET'\n}).then(response => {\n    if(!response || response.length === 0) {\n        return [];\n    }\n    return response.json()\n});\n\n\nconst createUserReview = (review) => fetch(`${userApi}/review`, {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(review)\n}).then(response => {\n    return response.json();\n})\n\n\nconst deleteUserReview = (rid) => fetch(`${userApi}/review?rid=${rid}`, {\n    method: 'DELETE'\n}).then(response => {\n    console.log(\"Delete\");\n    return rid;\n});\n\nconst getAllReviews = () => fetch(`${userApi}/allReviews`, {\n    method: 'GET'\n}).then(response => {\n    if(!response || response.length === 0) {\n        return [];\n    }\n    return response.json()\n});\n\nexport default {\n    getReviewsForAnime,\n    createUserReview,\n    getUserReviews,\n    getUserReviewsForAnime,\n    deleteUserReview,\n    getAllReviews\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red, blue, green, pink } from \"@material-ui/core/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n    marginBottom: \"20px\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  avatar1: {\n    backgroundColor: blue[500]\n  },\n  avatar2: {\n    backgroundColor: green[500]\n  },\n  avatar3: {\n    backgroundColor: pink[500]\n  }\n}));\n\nexport default function RecipeReviewCard(props) {\n  const classes = useStyles();\n  // let random = Math.floor(Math.random()* 4);\n  let review = props.reviews;\n  let user = props.user;\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          // random === 0 ? \n          // <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          //   R\n          // </Avatar> \n          // : random === 1 ?\n          //   <Avatar aria-label=\"recipe\" className={classes.avatar1}>\n          //   R\n          // </Avatar>   \n          (user == null || user.avatar == null ?\n            <Avatar aria-label=\"recipe\" className={classes.avatar2}>\n              {!user || !user.name.length ? \"A\": user.name[0].toUpperCase()}\n          </Avatar> :\n            <Avatar aria-label=\"recipe\" className={classes.avatar3}>\n              <img className={classes.reviewImage} src={user.avatar.tiny} />\n            </Avatar>)\n        }\n        action={\n          props.isAdminView ? <span data-toggle=\"modal\" data-target=\"#deleteAdminModal\" data-rid={user.rid} className=\"btn btn-trash\"><i className=\"fa fa-trash\"></i></span>\n          :\n          <i>\n            Upvotes: {review.upVotesCount}\n          </i>\n        }\n        title={!user ? \"Anonymous\" : props.isUserReview ? <Link to={`/profile/${user.id}`}>{user.name}</Link> : user.name}\n        subheader={\n          <span>\n            {review.createdAt.split(\"T\")[0]}\n            {props.isProfileView ? props.linkToAnime : \"\"}\n          </span>\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {review.reaction}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ReviewService from \"../services/ReviewService\";\nimport RecipeReviewCard from \"./ReviewsCard\";\nimport AnimeServices from \"../services/AnimeServices\";\nimport NavBar from \"./NavBar\";\nimport { TextareaAutosize, Card } from \"@material-ui/core\";\nimport { isAuthenticatedUser, getLocalUser } from \"../helpers/CookieHelper\";\n\nexport default\n    class ReviewsModal extends React.Component {\n\n    componentDidMount() {\n        this.getUserReviews(this.props.match.params.animeId);\n        this.getAnime(this.props.match.params.animeId);\n        this.getReviews(this.props.match.params.animeId);\n\n    }\n\n    state = {\n        reviewList: [],\n        userList: [],\n        userReviewsList: [],\n        animeTitle: \"\",\n        animePoster: \"\",\n        ajaxDone: false,\n        newCommentText: \"\"\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            newCommentText: e.target.value\n        })\n    }\n\n    createReview() {\n        let review = {\n            userId: getLocalUser().id,\n            reaction: this.state.newCommentText,\n            animeId: this.props.match.params.animeId\n        }\n\n        ReviewService.createUserReview(review).then((response) => {\n            this.setState({\n                userReviewsList: [response,...this.state.userReviewsList],\n                newCommentText: \"\"\n            })\n        });\n    }\n\n    getUserReviews(animeId) {\n        ReviewService.getUserReviewsForAnime(animeId).then((response) => {\n            this.setState({\n                userReviewsList: response\n            })\n        });\n    }\n\n    getReviews(animeId) {\n        ReviewService.getReviewsForAnime(animeId).then((response) => {\n            let reviewList = response[\"data\"] && response[\"data\"].length ? response[\"data\"] : [];\n            let userList = response[\"included\"] && response[\"included\"].length ? response[\"included\"] : [];\n            this.setState({\n                reviewList,\n                userList,\n                ajaxDone: true\n            });\n        })\n    }\n\n    getAnime(animeId) {\n        AnimeServices.findAnimeById(animeId).then((response) => {\n            let anime = response[\"data\"] && response[\"data\"].length ? response[\"data\"][0] : {};\n            console.log(anime);\n            if (anime === {} || !anime.attributes.coverImage) return;\n            this.setState({\n                animeTitle: anime.attributes.canonicalTitle,\n                animePoster: anime.attributes.coverImage.tiny || \"\"\n            })\n        });\n    }\n\n    render() {\n        return (\n            <span>\n                <NavBar />\n                <div className=\"container\">\n                    <h1>{this.state.animeTitle}</h1>\n                    {this.state.ajaxDone && this.state.animePoster &&\n                        <img src={this.state.animePoster} styles={{ \"width\": \"fit-content\" }} alt=\"anime\" />}\n                    <br /><br />\n                    {isAuthenticatedUser() ?\n                        <div>\n                            <TextareaAutosize\n                                id=\"reviews!\"\n                                rowsMin={3}\n                                onChange={(e) => this.handleInputChange(e)}\n                                name=\"reaction\"\n                                value={this.state.newCommentText}\n                                className=\"form-control\"\n                                placeholder=\"Wrte down the reactions to this anime!\"\n                                title=\"your reaction!\" />\n\n                            <button onClick={(e) => this.createReview()}\n                                type=\"button\" class=\"btn btn-info float-right\">Add review</button>\n                            <br /><br/>\n\n                        </div> :\n                        <Card>\n                            <div styles={{ \"textAlign\": \"center\" }}>\n                                Login / Sign up to leave your reviews!\n                            </div>\n                        </Card>\n\n                    }\n\n                    {this.state.userReviewsList && this.state.userReviewsList.length !== 0 &&\n                        <span>\n                            <h3><i>Animecadabra User Reviews</i></h3>\n                            {this.state.userReviewsList.map((el, index) => {\n                                let user = {\n                                    name: el.name,\n                                    id: el.userId\n                                }\n                                let review = {\n                                    reaction: el.reaction,\n                                    createdAt: el.timestamp,\n                                    upVotesCount: \"N/A\"\n                                }\n                                return <RecipeReviewCard isUserReview={true} reviews={review} user={user} />\n                            })}\n                        </span>\n                    }\n\n\n                    {this.state.reviewList &&\n                        <span>\n                            <h3><i>Curated Reviews</i></h3>\n                            {this.state.reviewList.map((el, index) => {\n                                return <RecipeReviewCard reviews={el.attributes} user={this.state.userList[index] ? this.state.userList[index].attributes : null} />\n                            })}\n                        </span>\n                    }\n                    {this.state.ajaxDone && this.state.reviewList.length === 0 &&\n                        <h5>Sorry! Doesn't look like anyone has reviewed to this yet</h5>\n                    }\n                </div>\n            </span>\n        )\n    }\n\n}\n","const api = \"https://cs4500-20su1-ss-proj-serv-java.herokuapp.com\"\n\nconst findProfileByUserId = (userId) => fetch(`${api}/profile?uid=${userId}`, {\n    method: 'GET'\n}).then(response => {\n    return response.json()\n}); \n\nconst updateProfile = (profile) => fetch(`${api}/profile`, {\n    method: 'PUT',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(profile)\n}).then(response => {\n    return response.json()\n}); \nexport default {\n    findProfileByUserId,\n    updateProfile\n}","import React from \"react\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport { getLocalUser, isAuthenticatedUser } from \"../helpers/CookieHelper\";\nimport ProfileServices from \"../services/ProfileServices\";\nimport ReviewService from \"../services/ReviewService\";\nimport RecipeReviewCard from \"./ReviewsCard\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default class ProfilePage extends React.Component {\n\n    componentDidMount() {\n        if (this.props.match.params && this.props.match.params.userId) {\n            this.updateProfile(this.props.match.params.userId);\n            this.setState({\n                isEditable: false\n            })\n\n        } else {\n            var user = getLocalUser();\n            if (user) {\n                this.updateProfile(user.id);\n            }\n        }\n\n    }\n    state = {\n        id: \"\",\n        isEditing: false,\n        isEditable: true,\n        name: \"\",\n        about: \"\",\n        email: \"\",\n        gender: \"\",\n        timeSpentOnAnime: \"\",\n        userReviewsList: []\n\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    updateProfile(userId) {\n        ProfileServices.findProfileByUserId(userId).then((response) => {\n\n            this.setState({\n                ...response\n            });\n        });\n        ReviewService.getUserReviews(userId).then((response) => {\n            this.setState({\n                userReviewsList: response\n            })\n        });\n\n    }\n\n    setEditing(edit) {\n        this.setState({\n            isEditing: edit\n        });\n    }\n\n\n    handleSubmit(event) {\n        let profile = {\n            ...this.state\n        }\n        ProfileServices.updateProfile(profile).then((response) => {\n            console.log(response);\n            this.setState({ ...response, isEditing: false })\n        });\n    }\n\n    render() {\n        return (\n            <span>\n                <NavBar />\n                {isAuthenticatedUser() || !this.state.isEditable ?\n                <div className=\"container\">\n                    <br />\n                    <h1>{this.state.name}'s Profile Page</h1>\n                    <hr />\n                    {this.state.isEditing &&\n                        <form id=\"registerForm\">\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-2 col-form-label\" htmlFor=\"firstName\">First Name</label>\n                                <div className=\"col-sm-10\">\n                                    <input id=\"name\"\n                                        onChange={(e) => this.handleInputChange(e)}\n                                        name=\"name\"\n                                        value={this.state.name}\n                                        className=\"form-control\"\n                                        placeholder=\"Alice\"\n                                        title=\"Your name\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n\n                                <div className=\"col-sm-10\">\n                                    <label>About</label>\n                                    <TextareaAutosize id=\"about\"\n                                        rowsMin={3}\n                                        onChange={(e) => this.handleInputChange(e)}\n                                        name=\"about\"\n                                        className=\"form-control\"\n                                        placeholder=\"Tell us about urself!\"\n                                        value={this.state.about}\n                                        title=\"About you!\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-2\">Email</label>\n                                <div className=\"col-sm-10\">\n                                    <input id=\"email\"\n                                        onChange={(e) => this.handleInputChange(e)}\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        value={this.state.email}\n                                        placeholder=\"email\"\n                                        title=\"Your email\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-2\">Gender</label>\n\n                                <div className=\"col-sm-10\">\n                                    <input id=\"gender\"\n                                        onChange={(e) => this.handleInputChange(e)}\n                                        name=\"gender\"\n                                        value={this.state.gender}\n                                        className=\"form-control\"\n                                        placeholder=\"gender\"\n                                        title=\"Your gender\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-2\">Time spent on Anime</label>\n                                <div className=\"col-sm-10\">\n                                    <input id=\"timeSpentOnAnime\"\n                                        onChange={(e) => this.handleInputChange(e)}\n                                        name=\"timeSpentOnAnime\"\n                                        className=\"form-control\"\n                                        value={this.state.timeSpentOnAnime}\n                                        placeholder=\"Alice\"\n                                        type={Number}\n                                        title=\"Time Spent on Anime\" />\n                                </div>\n                            </div>\n                            {this.state.isEditing &&\n                                <button onClick={(e) => this.handleSubmit()}\n                                    type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                            }\n                        </form>\n                    }\n                    {!this.state.isEditing &&\n                        <div>\n                            <div>\n                                <h5>Profile Name:</h5>\n                                <i>{this.state.name}</i>\n                            </div>\n                            <div>\n                                <h5>About:</h5>\n                                <i>{this.state.about}</i>\n                            </div>\n                            {this.state.isEditable &&\n                                <div>\n                                    <h5>Email</h5>\n                                    <i>{this.state.email}</i>\n                                </div>\n                            }\n                            {this.state.isEditable &&\n                                <div>\n                                    <h5>Gender</h5>\n                                    <i>{this.state.gender || \"N/A\"}</i>\n                                </div>\n                            }\n                            <div>\n                                <h5>Time spent on Anime</h5>\n                                <i>{this.state.timeSpentOnAnime || \"N/A\"}</i>\n                            </div>\n                            <br /><br />\n                            {isAuthenticatedUser() && this.state.isEditable &&\n                                <button onClick={(e) => this.setEditing(true)}\n                                    type=\"button\" class=\"btn btn-secondary\">Edit Profile</button>\n                            }\n                        </div>\n                    }\n                    <div>\n                        <br/>\n                        {this.state.userReviewsList && this.state.userReviewsList.length !== 0 &&\n                            <span>\n                                <h3><i>{this.state.name}'s Reviews</i></h3>\n                                {this.state.userReviewsList.map((el, index) => {\n                            \n                                    let user = {\n                                        name: el.name,\n                                        id: el.userId\n                                    }\n                                    let review = {\n                                        reaction: el.reaction,\n                                        createdAt: el.timestamp,\n                                        upVotesCount: \"N/A\"\n                                    }\n                                    \n                                    return <RecipeReviewCard \n                                    linkToAnime={<Link to={`/animeId/${el.animeId}/reviews`}><br/>Go to this anime review!</Link> }\n                                    isProfileView={true} \n                                    isUserReview={true} \n                                    reviews={review} \n                                    user={user} />\n                                })}\n                            </span>\n                        }\n                    </div>\n                </div>\n                :\n                <div style={{\"textAlign\": \"center\"}}>\n                <h2>Please login/Sign up to view this page</h2>\n                </div>\n                }\n          </span>\n        );\n    }\n\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReviewService from \"../services/ReviewService\";\nimport RecipeReviewCard from \"./ReviewsCard\";\nimport NavBar from \"./NavBar\";\nimport $ from \"jquery\";\n\nexport default\n    class AdminReview extends React.Component {\n    state = {\n        adminReviewList: [],\n        ridToDelete: \"\"\n    }\n\n    componentDidMount() {\n        ReviewService.getAllReviews().then(response => {\n            this.setState({\n                adminReviewList: response\n            })\n            var self = this;\n           $(\".btn-trash\").on(\"click\",function(e){\n                self.setState({\n                    ridToDelete: $(this).data(\"rid\")\n                })\n            });\n        });\n    }\n\n    deleteReview(e) {\n        if(!this.state.ridToDelete) {\n            return;\n        }\n        ReviewService.deleteUserReview(this.state.ridToDelete).then(response => {\n            console.log(\"delete\");\n            this.setState(prevState => ({\n                adminReviewList: prevState.adminReviewList.filter(el => el.id !== this.state.ridToDelete )\n            }));\n            $(\".close\").click();\n        });\n    }\n\n    render() {\n        return (\n            <span>\n                <NavBar />\n                <h1>Admin Review Dashboard</h1>\n                <hr />\n                <div className=\"container\">\n                    <div class=\"modal fade\" id=\"deleteAdminModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div class=\"modal-dialog\" role=\"document\">\n                            <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Review</h5>\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                    Are you sure you want to delete this review?\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                                    <button type=\"button\" onClick={(e) => this.deleteReview(e)} class=\"btn btn-danger\">Delete</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                {this.state.adminReviewList.map((el, index) => {\n                    console.log(el);\n                    let user = {\n                        name: el.name,\n                        id: el.userId,\n                        rid: el.id\n                    }\n                    let review = {\n                        reaction: el.reaction,\n                        createdAt: el.timestamp,\n                        upVotesCount: \"N/A\"\n                    }\n\n                    return <RecipeReviewCard\n                        linkToAnime={<Link to={`/animeId/${el.animeId}/reviews`}><br />Go to this anime review!</Link>}\n                        isProfileView={true}\n                        isAdminView={true}\n                        isUserReview={true}\n                        reviews={review}\n                        user={user} />\n                })}\n                </div>\n            </span >\n        )\n    }\n}\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\n\nexport default\n    class AuthentcatePlease extends React.Component {\n    render() {\n        return (\n            <span>\n                <NavBar />\n                <div style={{ \"textAlign\": \"center\" }}>\n                    <h2>Please login/Sign up to view this page</h2>\n                </div>\n            </span>\n        )\n    }\n}","import React from 'react'\nimport AnimeHomeController from \"../containers/AnimeHomeController\";\nimport Login from \"./Login\";\nimport AnimeProfileController from \"../containers/AnimeProfileController\"\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Register from './Register';\nimport AnimeDetails from \"./AnimeDetails\";\nimport { isAuthenticatedUser } from '../helpers/CookieHelper';\nimport ReviewsModal from './ReviewsModal';\nimport ProfilePage from './ProfilePage';\nimport AdminReview from './AdminReview';\nimport AuthentcatePlease from './AuthenticatePlease';\n\n\nclass Animecadabra extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <Route\n                        path='/'\n                        exact={true}\n                        render={props => isAuthenticatedUser() ?\n                            <AnimeHomeController authenticated={true} />\n                            :\n                            <AnimeHomeController authenticated={false} />\n                        }\n                        component={AnimeHomeController}\n                    />\n\n                    <Route\n                        path={[\"/search/:searchTitle\", \"/search\"]}\n                        exact={true}\n                        component={AnimeHomeController}\n                        />\n\n                    <Route\n                        path='/register'\n                        exact={true}\n                        component={Register} />\n\n                    <Route\n                        path='/login'\n                        exact={true}\n                        component={Login} />\n\n                    <Route\n                        path='/profile'\n                        exact={true}\n                        component={ProfilePage} />\n                    <Route\n                        path='/profile/:userId'\n                        exact={true}\n                        component={ProfilePage} />\n\n                    <Route\n                        path=\"/details/:animeTitle\"\n                        exact\n                        component={AnimeDetails} />\n\n                    <Route\n                        path=\"/animeId/:animeId/reviews\"\n                        exact\n                        component={ReviewsModal} />\n\n                    <Route\n                        path=\"/admin/reviews\"\n                        exact={true}\n                        component={() => isAuthenticatedUser() ? <AdminReview/> : <AuthentcatePlease />} />\n\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Animecadabra","import React from 'react';\nimport Animecadabra from \"./components/Animecadabra\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <span>\n    <Animecadabra/>\n    <footer>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" style={{\"color\": \"white\"}} href=\"https://docs.google.com/document/d/10mORL0pYz2giDSrBBjlm4hAQLk5QQwaY_VnXX08SDfc/edit\">\n      Privacy policy</a>\n      </footer>\n    </span>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/jquery';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport 'typeface-roboto'\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}